import "enum.proto";
import "trade.proto";

package entity;

message StringParam
{
	required string Data = 1;
}

message IntParam
{
	required int32 Data = 2;
}

message LegItem
{
	required string Symbol = 1;
	required int32 Ratio = 2;
	required PosiDirectionType Side = 3;
	required LegStatus Status = 4;
	required double Last = 5;
	required double Ask = 6;
	required double Bid = 7;
	required bool IsPreferred = 8;
}

message PortfolioItem
{
	required string ID = 1;
	required int32 Quantity = 2;
	required double Diff = 3;
	required double LongDiff = 4;
	required double ShortDiff = 5;
	required bool AutoOpen = 6;
	required bool AutoStopGain = 7;
	required bool AutoStopLoss = 8;
	repeated LegItem Legs = 9; 
	required string StrategyName = 10;
	required bytes StrategyData = 11; 
	required bool StrategyRunning = 12;
	required int32 OpenTimes = 13;
	required int32 CloseTimes = 14;
	required double Profit = 15;
}

message ConnectParam
{
	required string QuoteAddress = 1;
	required string StreamFolder = 2;
}

message OperationReturn
{
	required bool Success = 1;
	required string ErrorMessage = 2;
}

message LoginParam
{
	required string BrokerId = 1;
	required string UserId = 2;
	required string Password = 3;
}

message RegQuoteParam
{
	repeated string Symbols = 1;
}

message PorfOpenPosiParam
{
	required string PortfId = 1;
	required int32 Quantity = 2;
}

message ClosePositionParam
{
	required trade.MultiLegOrder MultiLegOrder = 1;
	optional string LegOrdRef = 2;
}

message LegOrderUpdateParam
{
	required string PortfId = 1;
	required string MultiLegOrderId = 2;
	required string LegOrderRef = 3;
	required trade.Order LegOrder = 4;
}

message ArbitrageStrategySettings
{
	required PosiDirectionType Side = 1;
	required CompareCondition OpenCondition = 2;
	required double OpenPosiThreshold = 3;
	required CompareCondition StopGainCondition = 4;
	required double StopGainThreshold = 5;
	required CompareCondition StopLossCondition = 6;
	required double StopLossThreshold = 7;
}

message ChangePosiStrategySettings
{
	required string CloseLeg = 1;
	required PosiDirectionType CloseLegSide = 2;
	required CompareCondition TriggerCondition = 3;
	required double Threshold = 4;
}

message ModifyStrategyParam
{
	required string PortfId = 1;
	required string StrategyName = 2;
	required bytes StrategyData = 3;
}

message ModifyPortfolioSwitchParam
{
	required string PortfId = 1;
	required bool AutoOpen = 2;
	required bool AutoStopGain = 3;
	required bool AutoStopLoss = 4;
}

message ModifyRunningStatusParam
{
	required string PortfId = 1;
	required bool Enabled = 2;
}

message ModifyPortfolioPreferredLegParam
{
	required string PortfId = 1;
	required string LegSymbol = 2;
}

message CancelOrderParam
{
	required string OrderRef = 1; 
	required string ExchangeId = 2; 
	required string OrdSysId = 3; 
	required string UserId = 4;
	required string Symbol = 5;
}